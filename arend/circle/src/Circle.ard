\data Structure
  | trivial
  | spin (s : Bool)
  | pin (p : Int)

\data Circle (S : Structure)
  | base
  | loop

\func disjoint-union (S : Structure) (c1 c2 : Circle S) : Circle S \elim c1, c2
  | base, base => base
  | _, _ => loop

\func is-cobordant (S : Structure) (c1 c2 : Circle S) : Bool \elim c1, c2
  | base, base => true
  | loop, loop => true
  | _, _ => false

\func quotient-trivial (circles : List (Circle trivial)) : List (Circle trivial)
  | [] => [base]
  | _ => [base]

\func quotient-spin (circles : List (Circle (spin s))) : List (Circle (spin s))
  | [] => [base, base]
  | _ => [base, base, loop, loop]

\func quotient-pin (circles : List (Circle (pin p))) : List (Circle (pin p))
  | [] => [base, base, base, base]
  | _ => [base, base, base, base, loop, loop, loop, loop]

\func quotient (S : Structure) (circles : List (Circle S)) : List (Circle S) \elim S
  | trivial => quotient-trivial circles
  | spin s => quotient-spin circles
  | pin p => quotient-pin circles

\func Omega1 (S : Structure) : List (Circle S) \elim S
  | trivial => quotient trivial [base]
  | spin _ => quotient (spin true) [base, base, loop, loop]
  | pin _ => quotient (pin 1) [base, base, base, base, loop, loop, loop, loop]