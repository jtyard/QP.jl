w2:=sqrt(2);
w3:=sqrt(3);
w5:=sqrt(5);
w6:=w2*w3;;
w10:=w2*w5;
w15:=w3*w5;
w30:=w2*w3*w5;

s1:=sqrt(2+sqrt(2));
s2:=sqrt(sqrt(5)-1);
s3:=sqrt(6+sqrt(6));

r1:=sqrt(2+sqrt(2+sqrt(2)));

r2:=sqrt((7/5*w30-7/2*w6+61/10*w10-14*w2+9/5*w15-3*w3+23/5*w5-8)*s2*s3
     +(3*w30-9*w6+9*w10-27*w2+9*w15-21*w3+15*w5-39)*s2
     +(-24/5*w30+10*w6-37/5*w10+15*w2-26/5*w15+12*w3-26/5*w5+12)*s3-3*w30+7*w6+3*w10-3*w2+4*w3+12);

I:=sqrt(-1);

c01:=(((1/2*w30+5/6*w6+1/2*w10+3/2*w2-w15-3*w3)*s1*s2*s3+(w15-5*w3+5*w5-5)*s1*s2+(w30+w6+w10-w2
    -2/3*w15-4/3*w3-2*w5+4)*s1*s3+(2*w30-2*w10)*s1+(2/3*w6-w10-3*w2+2/3*w15+8/3*w3-2*w5-4)*s2*s3+(-2*w30
    -5*w10-5*w2-w15+5*w3-5*w5+5)*s2+(-w30+1/3*w6+w10+w2-4/3*w15+4/3*w3+2*w5-2)*s3-2*w30+2*w10+4*w15
    +16*w5)*r1*r2+((w30+7/3*w6-4/3*w15-10/3*w3-2*w5-4)*s1*s2*s3+(w30+7/3*w6+3*w10-w2-8/3*w15-4/3*w3-2*w5
    +6)*s1*s3+(2*w15+10*w3+20)*s2+4*w10)*r2)*I+((1/6*w30+1/2*w6-3/2*w10-5/2*w2-w5-3)*s1*s2*s3+(3*w15+5*w3
    +5*w5+15)*s1*s2+(-w30+w6+w10+w2-2/3*w15+4/3*w3+2*w5+4)*s1*s3+(-6*w30-14*w10)*s1+(1/3*w30+w6+2*w10
    +4*w2-2/3*w15-4/3*w3+2*w5+4)*s2*s3+(-w30-5*w6-10*w2-3*w15-5*w3-5*w5-15)*s2+(5/3*w30-w6-w10-5*w2
    +2/3*w15-10/3*w3-4*w5-4)*s3+(6*w30+14*w10+8*w15+12*w5))*r1*r2+((2/3*w30+2*w6-w10-w2-2/3*w15-4/3*w3
    -2)*s1*s2*s3+(-1/3*w30+w6+w10-3*w2-2/3*w15-2/3*w3+4)*s1*s3+(-4*w15-10*w5-10)*s2+(4*w30+8*w10))*r2;
    	  
c02:=(16*w10*s2-32*w5)*r2*I+((8*w10+40*w2)*s2-32*w5)*r2;
    	  
c03:=(((1/2*w30-1/2*w6-1/2*w10+1/2*w2+1/3*w15-w3-2)*s1*s2*s3+(w30+5*w6+10*w2)*s1*s2+(6*w2-2*w3
    +2*w5)*s1*s3+4*w5*s1+(-2/3*w30+2/3*w6+2*w2-1/3*w15+w3+w5+1)*s2*s3+(-w30-5*w6-10*w2+w15-5*w3+5*w5
    -5)*s2+(-w30+w6-w10-7*w2+4*w3-2*w5-6)*s3-2*w30-6*w10-4*w5)*r1*r2+((-1/3*w30-1/3*w6-w10+w2+w15
    -1/3*w3+w5-3)*s1*s2*s3+(-w30-3*w6+w10-w2+2*w15+2*w3+8)*s1*s3+(w30-5*w6+5*w10-5*w2)*s2+(4*w15
    -4*w5))*r2)*I+((1/2*w30-1/2*w6+1/2*w10-1/2*w2-2/3*w3-w5+3)*s1*s2*s3+(-2*w30-5*w10-5*w2)*s1*s2+(2*w6
    -2*w15-2)*s1*s3+(4*w15+8*w5)*s1+(-2/3*w30+4/3*w6-w15+5/3*w3+w5-3)*s2*s3+(2*w30+5*w10+5*w2+3*w15
    +5*w3+5*w5+15)*s2+(w30-w6-w10+w2+2*w15-2*w3-4)*s3-2*w30-2*w10-4*w15-8*w5)*r1*r2+((1/3*w30
    -1/3*w6-w10+3*w2+1/3*w15-w3+w5-3)*s1*s2*s3+(-w30+w6-w10+5*w2+2*w5-6)*s1*s3+(3*w30+5*w6+5*w10
    +15*w2)*s2-12*w15-28*w5)*r2;
     	  
c04:=(((1/3*w30+3*w6-w10+3*w2-4/3*w15-8/3*w3-8)*s1*s2*s3+(4/3*w6+2*w10-2*w2-2/3*w15+2/3*w3-2*w5
    +2)*s1*s3)*r2+((-16*w6-24*w2+4*w15-12*w3+8*w5-24)*s2*s3+(52*w30-60*w6+72*w10-120*w2+84*w15-60*w3
    +84*w5-60)*s2+(20*w30-44*w6+20*w10-44*w2+36*w15-52*w3+36*w5-36)*s3+(36*w30-180*w6+36*w10-180*w2
    +32*w15-160*w3+24*w5-120)))*I+((w30+7/3*w6-w10-w2-4/3*w15-4/3*w3-4)*s1*s2*s3+(2/3*w30+2*w6+4*w2
    -2/3*w15-14/3*w3+2*w5-2)*s1*s3)*r2+(4*w30-4*w6+12*w10+12*w2+16*w3+12*w5+44)*s2*s3+(12*w30-20*w6
    +36*w15-60*w3+36*w5-60)*s2+(-4*w30-4*w6-4*w10-52*w2-4*w15+4*w3-12*w5-36)*s3-84*w30+180*w6-84*w10
    +180*w2-112*w15+240*w3-168*w5+360;

c05:=(((-w30-5/3*w6-3*w10-5*w2)*s1*s2*s3+(4*w5+20)*s1*s2+(-2*w30+2*w6-2*w10+2*w2+4/3*w15+8/3*w3+4*w5
    +8)*s1*s3-16*w10*s1+(2*w30+14/3*w6+4*w10+8*w2+2/3*w15+2/3*w3+2*w5+2)*s2*s3+(2*w10-10*w2-4*w5
    -20)*s2+(2*w30-14/3*w6+2*w10-10*w2-4/3*w15-20/3*w3-4*w5-12)*s3+(16*w10+8*w5))*r1*r2+((-4/3*w30
    -4*w6-2*w10-6*w2+10/3*w15+26/3*w3+6*w5+14)*s1*s2*s3+(-10/3*w30-2*w6-6*w10-2*w2+16/3*w15-8/3*w3
    +8*w5-8)*s1*s3+(4*w5-20)*s2-8*w10)*r2)*I+((-1/3*w30-w6-w10-3*w2+2*w15+6*w3+2*w5+6)*s1*s2*s3
    -8*w5*s1*s2+(-2*w30-2*w6-2*w10-2*w2+4/3*w15-8/3*w3+4*w5-8)*s1*s3+8*w10*s1+(-2/3*w30-2*w6-2/3*w15
    -10/3*w3+2*w5+2)*s2*s3+(6*w10+10*w2+8*w5)*s2+(2/3*w30+2*w6-2*w10+2*w2+8/3*w15+8/3*w3+8)*s3-8*w10
    -24*w5)*r1*r2+((-4/3*w6+2*w10+2*w2-2/3*w15-2/3*w3-2*w5-2)*s1*s2*s3+(2*w30+2/3*w6+2*w10+6*w2
    -4/3*w15+4/3*w3-4*w5-4)*s1*s3+(12*w5+20)*s2-8*w10)*r2;

c06:=((8*w15+24*w5)*r2+((-4*w30-8*w6-4*w10-16*w2-8*w15+32*w3+8*w5+8)*s2*s3+(-60*w30+140*w6-84*w10
    +180*w2-12*w15+100*w3+12*w5+60)*s2+(16*w30-48*w6+16*w10-56*w2+16*w15-8*w3+16*w5+8)*s3+(20*w30
    -100*w6+108*w10-300*w2+64*w15-160*w3)))*I+(8*w15+8*w5)*r2+(-8*w30+28*w6-8*w10+44*w2-16*w15+32*w3
    -8*w5+32)*s2*s3+(20*w30-20*w6-12*w10+60*w2-4*w15-20*w3+60*w5-180)*s2+(24*w30-48*w6+32*w10-80*w2
    -8*w15-8*w5-32)*s3+20*w30-20*w6-12*w10+60*w2+128*w15-320*w3+192*w5-480;

c07:=(((-1/2*w30+1/2*w6+1/2*w10-1/2*w2-1/3*w15+w3+2)*s1*s2*s3+(w30+5*w6+10*w2)*s1*s2+(-6*w2+2*w3
    -2*w5)*s1*s3+4*w5*s1+(2/3*w30-2/3*w6-2*w2+1/3*w15-w3-w5-1)*s2*s3+(-w30-5*w6-10*w2+w15-5*w3+5*w5
    -5)*s2+(w30-w6+w10+7*w2-4*w3+2*w5+6)*s3-2*w30-6*w10-4*w5)*r1*r2+((1/3*w30-1/3*w6-w10+3*w2
    +1/3*w15-w3+w5-3)*s1*s2*s3+(-w30+w6-w10+5*w2+2*w5-6)*s1*s3+(-3*w30-5*w6-5*w10-15*w2)*s2+(12*w15
    +28*w5))*r2)*I+((-1/2*w30+1/2*w6-1/2*w10+1/2*w2+2/3*w3+w5-3)*s1*s2*s3+(-2*w30-5*w10-5*w2)*s1*s2
    +(-2*w6+2*w15+2)*s1*s3+(4*w15+8*w5)*s1+(2/3*w30-4/3*w6+w15-5/3*w3-w5+3)*s2*s3+(2*w30+5*w10+5*w2
    +3*w15+5*w3+5*w5+15)*s2+(-w30+w6+w10-w2-2*w15+2*w3+4)*s3-2*w30-2*w10-4*w15-8*w5)*r1*r2
    +((1/3*w30+1/3*w6+w10-w2-w15+1/3*w3-w5+3)*s1*s2*s3+(w30+3*w6-w10+w2-2*w15-2*w3-8)*s1*s3+(w30
    -5*w6+5*w10-5*w2)*s2+(4*w15-4*w5))*r2;

c08:=((4/3*w30-8/3*w6+4*w10-8/3*w15-4*w5-4)*s1*s2*s3+(4*w30+20/3*w6+4*w10+20*w2-4/3*w15-20/3*w3-4*w5
    -20)*s1*s3)*r2*I+((8/3*w30+4/3*w6+4*w10-4*w15-20/3*w3-8*w5-8)*s1*s2*s3+(16/3*w30+8*w10-28/3*w15+20/3*w3
    -12*w5+20)*s1*s3)*r2;

c09:=(((1/2*w30+5/6*w6+1/2*w10+3/2*w2-w15-3*w3)*s1*s2*s3+(w15-5*w3+5*w5-5)*s1*s2+(w30+w6+w10-w2
    -2/3*w15-4/3*w3-2*w5+4)*s1*s3+(2*w30-2*w10)*s1+(2/3*w6-w10-3*w2+2/3*w15+8/3*w3-2*w5-4)*s2*s3+(-2*w30
    -5*w10-5*w2-w15+5*w3-5*w5+5)*s2+(-w30+1/3*w6+w10+w2-4/3*w15+4/3*w3+2*w5-2)*s3-2*w30+2*w10+4*w15
    +16*w5)*r1*r2+((-w30-7/3*w6+4/3*w15+10/3*w3+2*w5+4)*s1*s2*s3+(-w30-7/3*w6-3*w10+w2+8/3*w15+4/3*w3+2*w5
    -6)*s1*s3+(-2*w15-10*w3-20)*s2-4*w10)*r2)*I+((1/6*w30+1/2*w6-3/2*w10-5/2*w2-w5-3)*s1*s2*s3+(3*w15+5*w3
    +5*w5+15)*s1*s2+(-w30+w6+w10+w2-2/3*w15+4/3*w3+2*w5+4)*s1*s3+(-6*w30-14*w10)*s1+(1/3*w30+w6+2*w10
    +4*w2-2/3*w15-4/3*w3+2*w5+4)*s2*s3+(-w30-5*w6-10*w2-3*w15-5*w3-5*w5-15)*s2+(5/3*w30-w6-w10-5*w2
    +2/3*w15-10/3*w3-4*w5-4)*s3+(6*w30+14*w10+8*w15+12*w5))*r1*r2+((-2/3*w30-2*w6+w10+w2+2/3*w15+4/3*w3
    +2)*s1*s2*s3+(1/3*w30-w6-w10+3*w2+2/3*w15+2/3*w3-4)*s1*s3+(4*w15+10*w5+10)*s2-4*w30-8*w10)*r2;
     	  
c10:=(((6*w30+10*w6+10*w10+30*w2)*s2-16*w15-32*w5)*r2+((16*w30-28*w6+28*w10-32*w2+12*w15-36*w3+12*w5
    -12)*s2*s3+(24*w30+24*w10+60*w15-100*w3+36*w5-60)*s2+(-12*w30+36*w6-20*w10+36*w2+8*w15-32*w3-56)*s3
    -108*w30+220*w6-84*w10+180*w2-200*w15+360*w3-312*w5+600))*I+((-2*w30+10*w6-10*w10+10*w2)*s2+16*w5)*r2
    +(-8*w30+28*w6-4*w10+40*w2-4*w15+20*w3+12*w5+12)*s2*s3+(-88*w30+160*w6-120*w10+240*w2-108*w15+180*w3
    -108*w5+180)*s2+(-4*w30+4*w6-12*w10+4*w2-24*w15+32*w3-16*w5-24)*s3-44*w30+140*w6-12*w10+60*w2-24*w15
    +120*w3-24*w5+120;
     	  
c11:=(((w30-w6+w10-w2-2/3*w15+2*w3-2*w5+6)*s1*s2*s3+(6*w10+10*w2)*s1*s2+(-4*w15-4*w5)*s1*s3-8*w5*s1
    +(-2/3*w30+2/3*w6-4/3*w15-4)*s2*s3+(-6*w10-10*w2-4*w5-20)*s2+(2*w30+2*w6+2*w10+2*w2+4*w15-4*w3+4*w5
    -12)*s3+8*w5)*r1*r2+((-2/3*w30-2/3*w6-4*w2+4/3*w3+4)*s1*s2*s3+(2*w30-6*w6+2*w10-14*w2+8*w3+16)*s1*s3
    +(4*w10+20*w2)*s2-32*w5)*r2)*I+((-w30+w6-w10+w2+4/3*w3+4)*s1*s2*s3+(-2*w10+10*w2)*s1*s2+(-4*w6-12*w2
    +4*w3+4)*s1*s3+8*w5*s1+(4/3*w30-8/3*w6+2*w10-6*w2-4/3*w3-4)*s2*s3+(2*w10-10*w2+8*w5)*s2+(2*w30+2*w6
    +2*w10+10*w2+8)*s3-8*w10-8*w5)*r1*r2+((-4/3*w30+4/3*w6-2*w10+2*w2+8/3*w15-4*w3+4*w5-8)*s1*s2*s3
    +(-2*w30-2*w6-2*w10-2*w2+4*w15+4*w3+4*w5+12)*s1*s3-8*w10*s2+16*w5)*r2;

c12:=c04;

c13:=(((1/2*w30+5/6*w6+1/2*w10+3/2*w2-w15-3*w3)*s1*s2*s3+(-w15+5*w3-5*w5+5)*s1*s2+(w30+w6+w10-w2
    -2/3*w15-4/3*w3-2*w5+4)*s1*s3+(-2*w30+2*w10)*s1+(2/3*w6-w10-3*w2+2/3*w15+8/3*w3-2*w5-4)*s2*s3+(2*w30
    +5*w10+5*w2+w15-5*w3+5*w5-5)*s2+(-w30+1/3*w6+w10+w2-4/3*w15+4/3*w3+2*w5-2)*s3+(2*w30-2*w10-4*w15
    -16*w5))*r1*r2+((-2/3*w30-2*w6+w10+w2+2/3*w15+4/3*w3+2)*s1*s2*s3+(1/3*w30-w6-w10+3*w2+2/3*w15+2/3*w3
    -4)*s1*s3+(-4*w15-10*w5-10)*s2+(4*w30+8*w10))*r2)*I+((1/6*w30+1/2*w6-3/2*w10-5/2*w2-w5-3)*s1*s2*s3
    +(-3*w15-5*w3-5*w5-15)*s1*s2+(-w30+w6+w10+w2-2/3*w15+4/3*w3+2*w5+4)*s1*s3+(6*w30+14*w10)*s1+(1/3*w30
    +w6+2*w10+4*w2-2/3*w15-4/3*w3+2*w5+4)*s2*s3+(w30+5*w6+10*w2+3*w15+5*w3+5*w5+15)*s2+(5/3*w30-w6-w10
    -5*w2+2/3*w15-10/3*w3-4*w5-4)*s3-6*w30-14*w10-8*w15-12*w5)*r1*r2+((w30+7/3*w6-4/3*w15-10/3*w3-2*w5
    -4)*s1*s2*s3+(w30+7/3*w6+3*w10-w2-8/3*w15-4/3*w3-2*w5+6)*s1*s3+(-2*w15-10*w3-20)*s2-4*w10)*r2;

c14:=32*w5*r2;

c15:=(((-1/2*w30+1/2*w6+1/2*w10-1/2*w2-1/3*w15+w3+2)*s1*s2*s3+(w30+5*w6+10*w2)*s1*s2+(-6*w2+2*w3
    -2*w5)*s1*s3+4*w5*s1+(2/3*w30-2/3*w6-2*w2+1/3*w15-w3-w5-1)*s2*s3+(-w30-5*w6-10*w2+w15-5*w3+5*w5
    -5)*s2+(w30-w6+w10+7*w2-4*w3+2*w5+6)*s3-2*w30-6*w10-4*w5)*r1*r2+((-1/3*w30+1/3*w6+w10-3*w2
    -1/3*w15+w3-w5+3)*s1*s2*s3+(w30-w6+w10-5*w2-2*w5+6)*s1*s3+(3*w30+5*w6+5*w10+15*w2)*s2-12*w15
    -28*w5)*r2)*I+((-1/2*w30+1/2*w6-1/2*w10+1/2*w2+2/3*w3+w5-3)*s1*s2*s3+(-2*w30-5*w10-5*w2)*s1*s2
    +(-2*w6+2*w15+2)*s1*s3+(4*w15+8*w5)*s1+(2/3*w30-4/3*w6+w15-5/3*w3-w5+3)*s2*s3+(2*w30+5*w10+5*w2
    +3*w15+5*w3+5*w5+15)*s2+(-w30+w6+w10-w2-2*w15+2*w3+4)*s3-2*w30-2*w10-4*w15-8*w5)*r1*r2
    +((-1/3*w30-1/3*w6-w10+w2+w15-1/3*w3+w5-3)*s1*s2*s3+(-w30-3*w6+w10-w2+2*w15+2*w3+8)*s1*s3+(-w30
    +5*w6-5*w10+5*w2)*s2-4*w15+4*w5)*r2;

c16:=(((-5/3*w30-5/3*w6-w10+3*w2+4/3*w15+4*w3+4*w5)*s1*s2*s3+(-2*w30-10/3*w6-4*w10+14/3*w15+10/3*w3
    +2*w5-10)*s1*s3)*r2+((4*w30+4*w6+8*w10-4*w15-20*w3-8*w5-24)*s2*s3+(32*w30+12*w10+60*w2+20*w15
    -60*w3+60*w5-180)*s2+(16*w30-8*w6+16*w10+8*w2+4*w15-36*w3+4*w5-52)*s3-4*w30+20*w6-12*w10+60*w2
    +40*w15-200*w3+48*w5-240))*I+((-1/3*w30-5/3*w6+w10+w2+4/3*w3)*s1*s2*s3+(4/3*w30-2*w10+10*w2
    +2/3*w15-10/3*w3+2*w5-10)*s1*s3)*r2+(-4*w30+20*w6+32*w2+8*w15-24*w3+12*w5-20)*s2*s3+(24*w30-40*w6
    +36*w10-60*w2-12*w15+20*w3-36*w5+60)*s2+(8*w6-8*w10+16*w2-4*w15-12*w3+4*w5-68)*s3-28*w30+60*w6
    -84*w10+180*w2-56*w15+120*w3;

c17:=(((-w30-5/3*w6-3*w10-5*w2)*s1*s2*s3+(-4*w5-20)*s1*s2+(-2*w30+2*w6-2*w10+2*w2+4/3*w15+8/3*w3+4*w5
    +8)*s1*s3+16*w10*s1+(2*w30+14/3*w6+4*w10+8*w2+2/3*w15+2/3*w3+2*w5+2)*s2*s3+(-2*w10+10*w2+4*w5
    +20)*s2+(2*w30-14/3*w6+2*w10-10*w2-4/3*w15-20/3*w3-4*w5-12)*s3-16*w10-8*w5)*r1*r2+((4/3*w6-2*w10
    -2*w2+2/3*w15+2/3*w3+2*w5+2)*s1*s2*s3+(-2*w30-2/3*w6-2*w10-6*w2+4/3*w15-4/3*w3+4*w5+4)*s1*s3
    +(12*w5+20)*s2-8*w10)*r2)*I+((-1/3*w30-w6-w10-3*w2+2*w15+6*w3+2*w5+6)*s1*s2*s3+8*w5*s1*s2+(-2*w30
    -2*w6-2*w10-2*w2+4/3*w15-8/3*w3+4*w5-8)*s1*s3-8*w10*s1+(-2/3*w30-2*w6-2/3*w15-10/3*w3+2*w5
    +2)*s2*s3+(-6*w10-10*w2-8*w5)*s2+(2/3*w30+2*w6-2*w10+2*w2+8/3*w15+8/3*w3+8)*s3+(8*w10
    +24*w5))*r1*r2+((-4/3*w30-4*w6-2*w10-6*w2+10/3*w15+26/3*w3+6*w5+14)*s1*s2*s3+(-10/3*w30-2*w6-6*w10
    -2*w2+16/3*w15-8/3*w3+8*w5-8)*s1*s3+(-4*w5+20)*s2+8*w10)*r2;

c18:=c10;

c19:=c03;

c20:=((4/3*w30-4*w2-4/3*w15+4/3*w3)*s1*s2*s3+(16/3*w6+8*w2+4/3*w15-28/3*w3+4*w5-12)*s1*s3)*r2*I
    +((-20/3*w6-12*w2+8/3*w15+32/3*w3+4*w5+20)*s1*s2*s3+(-4/3*w30-4*w6-4*w10-4*w2+4/3*w15+4/3*w3+4*w5
    +4)*s1*s3)*r2;

c21:=(((1/2*w30+5/6*w6+1/2*w10+3/2*w2-w15-3*w3)*s1*s2*s3+(-w15+5*w3-5*w5+5)*s1*s2+(w30+w6+w10-w2
    -2/3*w15-4/3*w3-2*w5+4)*s1*s3+(-2*w30+2*w10)*s1+(2/3*w6-w10-3*w2+2/3*w15+8/3*w3-2*w5-4)*s2*s3+(2*w30
    +5*w10+5*w2+w15-5*w3+5*w5-5)*s2+(-w30+1/3*w6+w10+w2-4/3*w15+4/3*w3+2*w5-2)*s3+(2*w30-2*w10-4*w15
    -16*w5))*r1*r2+((2/3*w30+2*w6-w10-w2-2/3*w15-4/3*w3-2)*s1*s2*s3+(-1/3*w30+w6+w10-3*w2-2/3*w15-2/3*w3
    +4)*s1*s3+(4*w15+10*w5+10)*s2-4*w30-8*w10)*r2)*I+((1/6*w30+1/2*w6-3/2*w10-5/2*w2-w5-3)*s1*s2*s3+(-3*w15
    -5*w3-5*w5-15)*s1*s2+(-w30+w6+w10+w2-2/3*w15+4/3*w3+2*w5+4)*s1*s3+(6*w30+14*w10)*s1+(1/3*w30+w6
    +2*w10+4*w2-2/3*w15-4/3*w3+2*w5+4)*s2*s3+(w30+5*w6+10*w2+3*w15+5*w3+5*w5+15)*s2+(5/3*w30-w6-w10
    -5*w2+2/3*w15-10/3*w3-4*w5-4)*s3-6*w30-14*w10-8*w15-12*w5)*r1*r2+((-w30-7/3*w6+4/3*w15+10/3*w3+2*w5
    +4)*s1*s2*s3+(-w30-7/3*w6-3*w10+w2+8/3*w15+4/3*w3+2*w5-6)*s1*s3+(2*w15+10*w3+20)*s2+4*w10)*r2;

c22:=((8*w15+24*w5)*r2+((4*w30+8*w6+4*w10+16*w2+8*w15-32*w3-8*w5-8)*s2*s3+(60*w30-140*w6+84*w10-180*w2
    +12*w15-100*w3-12*w5-60)*s2+(-16*w30+48*w6-16*w10+56*w2-16*w15+8*w3-16*w5-8)*s3-20*w30+100*w6
    -108*w10+300*w2-64*w15+160*w3))*I+(8*w15+8*w5)*r2+(8*w30-28*w6+8*w10-44*w2+16*w15-32*w3+8*w5
    -32)*s2*s3+(-20*w30+20*w6+12*w10-60*w2+4*w15+20*w3-60*w5+180)*s2+(-24*w30+48*w6-32*w10+80*w2
    +8*w15+8*w5+32)*s3-20*w30+20*w6+12*w10-60*w2-128*w15+320*w3-192*w5+480;

c23:=(((-w30+w6-w10+w2+2/3*w15-2*w3+2*w5-6)*s1*s2*s3+(6*w10+10*w2)*s1*s2+(4*w15+4*w5)*s1*s3-8*w5*s1
    +(2/3*w30-2/3*w6+4/3*w15+4)*s2*s3+(-6*w10-10*w2-4*w5-20)*s2+(-2*w30-2*w6-2*w10-2*w2-4*w15+4*w3-4*w5
    +12)*s3+8*w5)*r1*r2+((4/3*w30-4/3*w6+2*w10-2*w2-8/3*w15+4*w3-4*w5+8)*s1*s2*s3+(2*w30+2*w6+2*w10+2*w2
    -4*w15-4*w3-4*w5-12)*s1*s3-8*w10*s2+16*w5)*r2)*I+((w30-w6+w10-w2-4/3*w3-4)*s1*s2*s3+(-2*w10
    +10*w2)*s1*s2+(4*w6+12*w2-4*w3-4)*s1*s3+8*w5*s1+(-4/3*w30+8/3*w6-2*w10+6*w2+4/3*w3+4)*s2*s3+(2*w10
    -10*w2+8*w5)*s2+(-2*w30-2*w6-2*w10-10*w2-8)*s3-8*w10-8*w5)*r1*r2+((-2/3*w30-2/3*w6-4*w2+4/3*w3
    +4)*s1*s2*s3+(2*w30-6*w6+2*w10-14*w2+8*w3+16)*s1*s3+(-4*w10-20*w2)*s2+32*w5)*r2;

c24:=c16;

c25:=c09;

c26:=c02;

c27:=(((1/2*w30-1/2*w6-1/2*w10+1/2*w2+1/3*w15-w3-2)*s1*s2*s3+(w30+5*w6+10*w2)*s1*s2+(6*w2-2*w3
    +2*w5)*s1*s3+4*w5*s1+(-2/3*w30+2/3*w6+2*w2-1/3*w15+w3+w5+1)*s2*s3+(-w30-5*w6-10*w2+w15-5*w3+5*w5
    -5)*s2+(-w30+w6-w10-7*w2+4*w3-2*w5-6)*s3-2*w30-6*w10-4*w5)*r1*r2+((1/3*w30+1/3*w6+w10-w2-w15+1/3*w3
    -w5+3)*s1*s2*s3+(w30+3*w6-w10+w2-2*w15-2*w3-8)*s1*s3+(-w30+5*w6-5*w10+5*w2)*s2-4*w15+4*w5)*r2)*I
    +((1/2*w30-1/2*w6+1/2*w10-1/2*w2-2/3*w3-w5+3)*s1*s2*s3+(-2*w30-5*w10-5*w2)*s1*s2+(2*w6-2*w15-2)*s1*s3
    +(4*w15+8*w5)*s1+(-2/3*w30+4/3*w6-w15+5/3*w3+w5-3)*s2*s3+(2*w30+5*w10+5*w2+3*w15+5*w3+5*w5+15)*s2
    +(w30-w6-w10+w2+2*w15-2*w3-4)*s3-2*w30-2*w10-4*w15-8*w5)*r1*r2+((-1/3*w30+1/3*w6+w10-3*w2-1/3*w15
    +w3-w5+3)*s1*s2*s3+(w30-w6+w10-5*w2-2*w5+6)*s1*s3+(-3*w30-5*w6-5*w10-15*w2)*s2+(12*w15+28*w5))*r2;

c28:=(((1/3*w30+3*w6-w10+3*w2-4/3*w15-8/3*w3-8)*s1*s2*s3+(4/3*w6+2*w10-2*w2-2/3*w15+2/3*w3-2*w5
    +2)*s1*s3)*r2+((16*w6+24*w2-4*w15+12*w3-8*w5+24)*s2*s3+(-52*w30+60*w6-72*w10+120*w2-84*w15+60*w3-84*w5
    +60)*s2+(-20*w30+44*w6-20*w10+44*w2-36*w15+52*w3-36*w5+36)*s3-36*w30+180*w6-36*w10+180*w2-32*w15
    +160*w3-24*w5+120))*I+((w30+7/3*w6-w10-w2-4/3*w15-4/3*w3-4)*s1*s2*s3+(2/3*w30+2*w6+4*w2-2/3*w15
    -14/3*w3+2*w5-2)*s1*s3)*r2+(-4*w30+4*w6-12*w10-12*w2-16*w3-12*w5-44)*s2*s3+(-12*w30+20*w6-36*w15+60*w3
    -36*w5+60)*s2+(4*w30+4*w6+4*w10+52*w2+4*w15-4*w3+12*w5+36)*s3+84*w30-180*w6+84*w10-180*w2+112*w15
    -240*w3+168*w5-360;

c29:=(((-w30-5/3*w6-3*w10-5*w2)*s1*s2*s3+(4*w5+20)*s1*s2+(-2*w30+2*w6-2*w10+2*w2+4/3*w15+8/3*w3+4*w5
    +8)*s1*s3-16*w10*s1+(2*w30+14/3*w6+4*w10+8*w2+2/3*w15+2/3*w3+2*w5+2)*s2*s3+(2*w10-10*w2-4*w5
    -20)*s2+(2*w30-14/3*w6+2*w10-10*w2-4/3*w15-20/3*w3-4*w5-12)*s3+(16*w10+8*w5))*r1*r2+((4/3*w30+4*w6
    +2*w10+6*w2-10/3*w15-26/3*w3-6*w5-14)*s1*s2*s3+(10/3*w30+2*w6+6*w10+2*w2-16/3*w15+8/3*w3-8*w5
    +8)*s1*s3+(-4*w5+20)*s2+8*w10)*r2)*I+((-1/3*w30-w6-w10-3*w2+2*w15+6*w3+2*w5+6)*s1*s2*s3-8*w5*s1*s2
    +(-2*w30-2*w6-2*w10-2*w2+4/3*w15-8/3*w3+4*w5-8)*s1*s3+8*w10*s1+(-2/3*w30-2*w6-2/3*w15-10/3*w3
    +2*w5+2)*s2*s3+(6*w10+10*w2+8*w5)*s2+(2/3*w30+2*w6-2*w10+2*w2+8/3*w15+8/3*w3+8)*s3-8*w10
    -24*w5)*r1*r2+((4/3*w6-2*w10-2*w2+2/3*w15+2/3*w3+2*w5+2)*s1*s2*s3+(-2*w30-2/3*w6-2*w10-6*w2
    +4/3*w15-4/3*w3+4*w5+4)*s1*s3+(-12*w5-20)*s2+8*w10)*r2;

c30:=c22;

c31:=c15;

c32:=c08;

c33:=c01;

c34:=(((6*w30+10*w6+10*w10+30*w2)*s2-16*w15-32*w5)*r2+((-16*w30+28*w6-28*w10+32*w2-12*w15+36*w3-12*w5
    +12)*s2*s3+(-24*w30-24*w10-60*w15+100*w3-36*w5+60)*s2+(12*w30-36*w6+20*w10-36*w2-8*w15+32*w3
    +56)*s3+(108*w30-220*w6+84*w10-180*w2+200*w15-360*w3+312*w5-600)))*I+((-2*w30+10*w6-10*w10
    +10*w2)*s2+16*w5)*r2+(8*w30-28*w6+4*w10-40*w2+4*w15-20*w3-12*w5-12)*s2*s3+(88*w30-160*w6+120*w10
    -240*w2+108*w15-180*w3+108*w5-180)*s2+(4*w30-4*w6+12*w10-4*w2+24*w15-32*w3+16*w5+24)*s3+44*w30
    -140*w6+12*w10-60*w2+24*w15-120*w3+24*w5-120;

c35:=(((w30-w6+w10-w2-2/3*w15+2*w3-2*w5+6)*s1*s2*s3+(6*w10+10*w2)*s1*s2+(-4*w15-4*w5)*s1*s3-8*w5*s1
    +(-2/3*w30+2/3*w6-4/3*w15-4)*s2*s3+(-6*w10-10*w2-4*w5-20)*s2+(2*w30+2*w6+2*w10+2*w2+4*w15-4*w3+4*w5
    -12)*s3+8*w5)*r1*r2+((2/3*w30+2/3*w6+4*w2-4/3*w3-4)*s1*s2*s3+(-2*w30+6*w6-2*w10+14*w2-8*w3-16)*s1*s3
    +(-4*w10-20*w2)*s2+32*w5)*r2)*I+((-w30+w6-w10+w2+4/3*w3+4)*s1*s2*s3+(-2*w10+10*w2)*s1*s2+(-4*w6-12*w2
    +4*w3+4)*s1*s3+8*w5*s1+(4/3*w30-8/3*w6+2*w10-6*w2-4/3*w3-4)*s2*s3+(2*w10-10*w2+8*w5)*s2+(2*w30+2*w6
    +2*w10+10*w2+8)*s3-8*w10-8*w5)*r1*r2+((4/3*w30-4/3*w6+2*w10-2*w2-8/3*w15+4*w3-4*w5+8)*s1*s2*s3+(2*w30
    +2*w6+2*w10+2*w2-4*w15-4*w3-4*w5-12)*s1*s3+8*w10*s2-16*w5)*r2;

c36:=c28;

c37:=c21;

c38:=c14;

c39:=c07;

c40:=(((-5/3*w30-5/3*w6-w10+3*w2+4/3*w15+4*w3+4*w5)*s1*s2*s3+(-2*w30-10/3*w6-4*w10+14/3*w15+10/3*w3
    +2*w5-10)*s1*s3)*r2+((-4*w30-4*w6-8*w10+4*w15+20*w3+8*w5+24)*s2*s3+(-32*w30-12*w10-60*w2-20*w15
    +60*w3-60*w5+180)*s2+(-16*w30+8*w6-16*w10-8*w2-4*w15+36*w3-4*w5+52)*s3+(4*w30-20*w6+12*w10-60*w2
    -40*w15+200*w3-48*w5+240)))*I+((-1/3*w30-5/3*w6+w10+w2+4/3*w3)*s1*s2*s3+(4/3*w30-2*w10+10*w2
    +2/3*w15-10/3*w3+2*w5-10)*s1*s3)*r2+(4*w30-20*w6-32*w2-8*w15+24*w3-12*w5+20)*s2*s3+(-24*w30+40*w6
    -36*w10+60*w2+12*w15-20*w3+36*w5-60)*s2+(-8*w6+8*w10-16*w2+4*w15+12*w3-4*w5+68)*s3+28*w30-60*w6
    +84*w10-180*w2+56*w15-120*w3;

c41:=(((-w30-5/3*w6-3*w10-5*w2)*s1*s2*s3+(-4*w5-20)*s1*s2+(-2*w30+2*w6-2*w10+2*w2+4/3*w15+8/3*w3+4*w5
    +8)*s1*s3+16*w10*s1+(2*w30+14/3*w6+4*w10+8*w2+2/3*w15+2/3*w3+2*w5+2)*s2*s3+(-2*w10+10*w2+4*w5
    +20)*s2+(2*w30-14/3*w6+2*w10-10*w2-4/3*w15-20/3*w3-4*w5-12)*s3-16*w10-8*w5)*r1*r2+((-4/3*w6+2*w10
    +2*w2-2/3*w15-2/3*w3-2*w5-2)*s1*s2*s3+(2*w30+2/3*w6+2*w10+6*w2-4/3*w15+4/3*w3-4*w5-4)*s1*s3
    +(-12*w5-20)*s2+8*w10)*r2)*I+((-1/3*w30-w6-w10-3*w2+2*w15+6*w3+2*w5+6)*s1*s2*s3+8*w5*s1*s2+(-2*w30
    -2*w6-2*w10-2*w2+4/3*w15-8/3*w3+4*w5-8)*s1*s3-8*w10*s1+(-2/3*w30-2*w6-2/3*w15-10/3*w3+2*w5
    +2)*s2*s3+(-6*w10-10*w2-8*w5)*s2+(2/3*w30+2*w6-2*w10+2*w2+8/3*w15+8/3*w3+8)*s3+(8*w10
    +24*w5))*r1*r2+((4/3*w30+4*w6+2*w10+6*w2-10/3*w15-26/3*w3-6*w5-14)*s1*s2*s3+(10/3*w30+2*w6+6*w10
    +2*w2-16/3*w15+8/3*w3-8*w5+8)*s1*s3+(4*w5-20)*s2-8*w10)*r2;

c42:=c34;

c43:=c27;

c44:=c20;

c45:=c13;

c46:=c06;

c47:=(((-w30+w6-w10+w2+2/3*w15-2*w3+2*w5-6)*s1*s2*s3+(6*w10+10*w2)*s1*s2+(4*w15+4*w5)*s1*s3-8*w5*s1
    +(2/3*w30-2/3*w6+4/3*w15+4)*s2*s3+(-6*w10-10*w2-4*w5-20)*s2+(-2*w30-2*w6-2*w10-2*w2-4*w15+4*w3-4*w5
    +12)*s3+8*w5)*r1*r2+((-4/3*w30+4/3*w6-2*w10+2*w2+8/3*w15-4*w3+4*w5-8)*s1*s2*s3+(-2*w30-2*w6-2*w10-2*w2
    +4*w15+4*w3+4*w5+12)*s1*s3+8*w10*s2-16*w5)*r2)*I+((w30-w6+w10-w2-4/3*w3-4)*s1*s2*s3+(-2*w10
    +10*w2)*s1*s2+(4*w6+12*w2-4*w3-4)*s1*s3+8*w5*s1+(-4/3*w30+8/3*w6-2*w10+6*w2+4/3*w3+4)*s2*s3+(2*w10
    -10*w2+8*w5)*s2+(-2*w30-2*w6-2*w10-10*w2-8)*s3-8*w10-8*w5)*r1*r2+((2/3*w30+2/3*w6+4*w2-4/3*w3
    -4)*s1*s2*s3+(-2*w30+6*w6-2*w10+14*w2-8*w3-16)*s1*s3+(4*w10+20*w2)*s2-32*w5)*r2;

c48:=c40;

phi:=[ c01, c02, c03, c04, c05, c06, c07, c08, c09, c10, c11, c12,
       c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24,
       c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36,
       c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48 ];
